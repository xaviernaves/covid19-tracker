{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Card/Card.jsx","components/Cards/Cards.jsx","components/Chart/Chart.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","components/MonthPicker/MonthPicker.jsx","components/Logo/Logo.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/Logo/Logo.module.css","image.png"],"names":["module","exports","Card","props","title","desc","number","lastUpdate","useState","styles","infected","cardStyle","setCardStyle","useEffect","recovered","deaths","map","b","objKey","Object","keys","Fragment","Grid","item","component","mCard","xs","md","className","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","Cards","data","confirmed","container","spacing","justify","Chart","country","covidDaily","lineChart","length","labels","date","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","text","url","monthNames","fetchData","a","_country","axios","get","console","log","fetchDailyData","month","dailyData","total","reportDate","monthData","filter","getMonth","getFullYear","forEach","day","push","totalConfirmed","lastDay","fetchRegisteredMonths","Set","d","fetchCountries","countries","name","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","Select","defaultValue","displayEmpty","onChange","e","target","MenuItem","style","fontSize","i","key","MonthPicker","handleMonthChange","months","setMonths","Logo","image","src","covidImage","alt","App","state","covidData","setState","daily","pop","this","formGroup","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f34cb698.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3PHuP\",\"card\":\"Cards_card__yNaWa\",\"infected\":\"Cards_infected__236FS\",\"recovered\":\"Cards_recovered__3lSUH\",\"deaths\":\"Cards_deaths__2ZvFw\"};","import React, { useState, useEffect } from 'react'\r\nimport { Card as mCard, CardContent, Typography, Grid } from '@material-ui/core'\r\nimport CountUp from 'react-countup'\r\nimport styles from '../Cards.module.css'\r\nimport cx from 'classnames'\r\n\r\nconst Card = (props) => {\r\n    const { title, desc, number, lastUpdate } = props\r\n    const [cardStyle, setCardStyle] = useState(styles.infected)\r\n\r\n    useEffect(() => {\r\n        setCardStyle([\r\n            { \"Infected\": styles.infected },\r\n            { \"Recovered\": styles.recovered },\r\n            { \"Deaths\": styles.deaths }\r\n        ].map((b) => {\r\n            const objKey = Object.keys(b)[0]\r\n            return (objKey === title) && b[objKey]\r\n        }))\r\n    }, [title])\r\n\r\n    if (!number) {\r\n        return ('Loading...')\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <Grid item component={mCard} xs={12} md={3} className={cx(styles.card, cardStyle)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>{title}</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={number.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">{desc}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport Card from './Card/Card'\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ({data: { confirmed, recovered, deaths, lastUpdate }}) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Card title={\"Infected\"} desc={\"Number of COVID-19 cases\"} number={confirmed} lastUpdate={lastUpdate} />\r\n                <Card title={\"Recovered\"} desc={\"Number of COVID-19 recoveries\"} number={recovered} lastUpdate={lastUpdate} />\r\n                <Card title={\"Deaths\"} desc={\"Number of COVID-19 deaths\"} number={deaths} lastUpdate={lastUpdate} />\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import React from 'react'\r\nimport { Line, Bar } from 'react-chartjs-2'\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country, covidDaily }) => {\r\n    let lineChart = (\r\n        covidDaily.length\r\n        && \r\n        <Line\r\n            data={{\r\n                labels: covidDaily.map(({ data }) => data.date),\r\n                datasets: [{\r\n                    data: covidDaily.map(({ data }) => data.confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true\r\n                }, {\r\n                    data: covidDaily.map(({ data }) => data.deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    fill: true\r\n                }]\r\n            }}\r\n        />\r\n    )\r\n\r\n    const barChart = (\r\n        confirmed\r\n        && <Bar\r\n            data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: [\r\n                        'rgba(0, 0, 255, .5)',\r\n                        'rgba(0, 255, 0, .5)',\r\n                        'rgba(255, 0, 0, .5)'\r\n                    ],\r\n                    data: [confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend: { display: false },\r\n                title: { display: true, text: `Current state in ${country}` }\r\n            }}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\n// This gets global data if a country isn't a parameter.\r\nexport const fetchData = async (country = '') => {\r\n    try {\r\n        const _country = (country !== '') ? `/countries/${country}` : '';\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(`${url}${_country}`)\r\n        return { confirmed, recovered, deaths, lastUpdate }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n// This will fetch today's data if a month is not passed.\r\nexport const fetchDailyData = async (month = '') => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`)\r\n        if (month === '') {\r\n            return data.map(dailyData => ({\r\n                data: {\r\n                    confirmed: dailyData.confirmed.total,\r\n                    deaths: dailyData.deaths.total,\r\n                    date: dailyData.reportDate\r\n                }\r\n            }))\r\n        } else {\r\n            const monthData = data.filter(data => {\r\n                return (month === `${monthNames[new Date(data.reportDate).getMonth()]} ${new Date(data.reportDate).getFullYear()}`) && data\r\n            })\r\n\r\n            let dailyData = [];\r\n            monthData.forEach(day => dailyData.push({\r\n                data: {\r\n                    confirmed: day.totalConfirmed,\r\n                    deaths: day.deaths.total,\r\n                    date: day.reportDate\r\n                }\r\n            }))\r\n\r\n            const lastDay = monthData[monthData.length - 1]\r\n            return [\r\n                ...dailyData,\r\n                {\r\n                    confirmed: { value: lastDay.totalConfirmed },\r\n                    recovered: { value: 0 },\r\n                    deaths: { value: lastDay.deaths.total },\r\n                    lastUpdate: lastDay.reportDate\r\n                }\r\n            ]\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchRegisteredMonths = async () => {\r\n    try {\r\n        let { data } = await axios.get(`${url}/daily`)\r\n        data = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }))\r\n\r\n        return new Set(data.map(d => {\r\n            return `${monthNames[new Date(d.date).getMonth()]} ${new Date(d.date).getFullYear()}`\r\n        }))\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`)\r\n        return countries.map((country) => country.name)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Select, FormControl, MenuItem } from '@material-ui/core'\r\nimport styles from '../../App.module.css'\r\nimport { fetchCountries } from '../../api'\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [countries, setCountries] = useState([])\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setCountries(await fetchCountries())\r\n        })()\r\n    }, [])\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <Select defaultValue=\"\" displayEmpty onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <MenuItem value=\"\"><i style={{fontSize: '20px'}}>Global</i></MenuItem>\r\n                {countries.map((country, i) => <MenuItem key={i} value={country}>{country}</MenuItem>)}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Select, FormControl, MenuItem } from '@material-ui/core'\r\nimport { fetchRegisteredMonths } from '../../api'\r\nimport styles from '../../App.module.css'\r\n\r\nconst MonthPicker = ({ handleMonthChange }) => {\r\n    const [months, setMonths] = useState('')\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setMonths(await fetchRegisteredMonths())\r\n        })()\r\n    }, [])\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <Select defaultValue=\"\" displayEmpty onChange={(e) => handleMonthChange(e.target.value)}>\r\n                <MenuItem value=\"\"><i style={{fontSize: '20px'}}>Today</i></MenuItem>\r\n                {[...months].map((month, i) => <MenuItem key={i} value={month}>{month}</MenuItem>)}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default MonthPicker\r\n","import React from 'react'\r\nimport styles from './Logo.module.css';\r\nimport covidImage from '../../image.png'\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <img className={styles.image} src={covidImage} alt=\"COVID-19\" />\r\n    )\r\n}\r\n\r\nexport default Logo\r\n\r\n","import React, { Component } from 'react'\r\nimport { Cards, Chart, CountryPicker, MonthPicker, Logo } from './components/'\r\nimport styles from './App.module.css';\r\nimport { fetchData, fetchDailyData } from './api'\r\n\r\nclass App extends Component {\r\n    state = {\r\n        covidData: {},\r\n        covidDaily: [],\r\n        country: '',\r\n        month: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ covidData: await fetchData(), covidDaily: await fetchDailyData() })\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        this.setState({ covidData: await fetchData(country), country: country, month: '' })\r\n    }\r\n\r\n    handleMonthChange = async (month) => {\r\n        const daily = await fetchDailyData(month)\r\n        if (month !== '') {\r\n            const data = daily.pop()\r\n            this.setState({\r\n                covidData: data,\r\n                covidDaily: daily,\r\n                country: '',\r\n                month\r\n            })\r\n        } else {\r\n            this.setState({ covidData: await fetchData(), covidDaily: daily })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { covidData, covidDaily, country, month } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <Logo />\r\n                <Cards data={covidData} />\r\n                <div className={styles.formGroup}>\r\n                    <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                    {(country === '') && <MonthPicker handleMonthChange={this.handleMonthChange} />}\r\n                </div>\r\n                <Chart data={covidData} covidDaily={covidDaily} country={country} month={month} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2UDEj\",\"formGroup\":\"App_formGroup__30ttK\",\"formControl\":\"App_formControl__JlZAc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2lAeQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Logo_image__2319A\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}